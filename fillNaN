def fillNaN(datasetDF,f,b):
    
    datasetCopy=datasetDF.copy()

     #column Count
    for colNum in range(1,dataset.shape[1]):
        
        #get nan row indexs of column
        numListe=dataset.index[dataset[dataset.loc[0].index[colNum]].isnull()].tolist()
        
        for listRowNo in range(0,len(numListe)):
            
            rowIndex=numListe[listRowNo]
            
            if (rowIndex==0):
                
                for rowNum in range(rowIndex+1,rowIndex+f):
                    
                    datasetCopy[dataset.loc[rowIndex].index[colNum]][rowIndex]=datasetCopy.loc[rowNum][colNum]


                    
            elif (rowIndex==dataset.shape[0]-1):
                
                for rowNum in range(rowIndex-1,rowIndex+b,-1):
                    
                    datasetCopy[dataset.loc[rowIndex].index[colNum]][rowIndex]=datasetCopy.loc[rowNum][colNum]

            else:
                
                for rowNum in range(rowIndex-1,rowIndex+b,-1):
                    
                    datasetCopy[dataset.loc[rowIndex].index[colNum]][rowIndex]=datasetCopy.loc[rowNum][colNum]

                    
                if dataset.loc[rowIndex][colNum]==np.nan:
                    

                    
                    for rowNum in range(rowIndex+1,rowIndex+f):
                    
                        datasetCopy[dataset.loc[rowIndex].index[colNum]][rowIndex]=datasetCopy.loc[rowNum][colNum]

   

    
    return datasetCopy
                        
